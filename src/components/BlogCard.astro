---
import { Image } from 'astro:assets';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  heroImage?: string;
  slug: string;
  tags: string[];
  featured?: boolean;
}

const { title, description, pubDate, heroImage, slug, tags, featured = false } = Astro.props;

// Format date
const formattedDate = pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});

// Calculate reading time (rough estimate: 200 words per minute)
const wordCount = description.split(' ').length;
const readingTime = Math.max(1, Math.ceil(wordCount / 50)); // Rough estimate based on description
---

<article class={`blog-card ${featured ? 'featured' : ''}`}>
  <a href={`/blog/${slug}`} class="card-link">
    {heroImage && (
      <div class="card-image">
        <Image
          src={heroImage}
          alt={title}
          width={800}
          height={450}
          format="webp"
          loading="lazy"
          class="hero-image"
        />
        <div class="image-overlay"></div>
      </div>
    )}

    <div class="card-content">
      <div class="card-meta">
        <time datetime={pubDate.toISOString()} class="date">{formattedDate}</time>
        <span class="reading-time">{readingTime} min read</span>
      </div>

      <h2 class="card-title">{title}</h2>
      <p class="card-description">{description}</p>

      {tags && tags.length > 0 && (
        <div class="card-tags">
          {tags.slice(0, 3).map((tag) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .blog-card {
    background: #1a1a1a;
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 12px rgba(0, 93, 66, 0.1);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .blog-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 24px rgba(0, 93, 66, 0.2);
  }

  .blog-card.featured {
    border: 1px solid #2E2C2B;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
  }

  .card-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .card-image {
    position: relative;
    width: 100%;
    aspect-ratio: 16 / 9;
    overflow: hidden;
  }

  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .blog-card:hover .hero-image {
    transform: scale(1.05);
  }

  .image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8));
    pointer-events: none;
  }

  .card-content {
    padding: 24px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    flex: 1;
  }

  .card-meta {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 14px;
    color: #918B85;
  }

  .date, .reading-time {
    display: flex;
    align-items: center;
  }

  .reading-time::before {
    content: "â€¢";
    margin-right: 12px;
  }

  .card-title {
    font-size: 24px;
    font-weight: 700;
    line-height: 1.3;
    color: #F1EDE9;
    margin: 0;
    transition: color 0.2s ease;
  }

  .blog-card:hover .card-title {
    color: #00D09C;
  }

  .card-description {
    font-size: 16px;
    line-height: 1.6;
    color: #918B85;
    margin: 0;
    flex: 1;
  }

  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: auto;
  }

  .tag {
    display: inline-block;
    padding: 6px 12px;
    font-size: 13px;
    font-weight: 600;
    background: linear-gradient(135deg, #00D09C, #6BFFD8);
    color: #000000;
    border-radius: 6px;
    transition: transform 0.2s ease;
  }

  .tag:hover {
    transform: scale(1.05);
  }

  /* Tablet and up */
  @media (min-width: 768px) {
    .card-content {
      padding: 32px;
    }

    .card-title {
      font-size: 28px;
    }

    .card-description {
      font-size: 18px;
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .blog-card,
    .hero-image,
    .card-title,
    .tag {
      transition: none;
    }

    .blog-card:hover {
      transform: none;
    }

    .blog-card:hover .hero-image {
      transform: none;
    }

    .tag:hover {
      transform: none;
    }
  }
</style>
